<?xml version="1.0"?>
<launch>
  
  <!-- mir_maze_world args -->
  <arg name="gui" default="true" />
  <arg name="mir_type" default="mir_100" />
  <arg name="tf_prefix" default="" doc="tf_prefix to be used by gazebo plugins and in the robot's urdf etc." />

  <!-- mir_empty_world args -->
  <arg name="world_name" default="worlds/empty.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable, but can also be an absolute path -->
  <arg name="robot_x"   default="0.0" />
  <arg name="robot_y"   default="0.0" />
  <arg name="robot_yaw" default="0.0" />
  <arg name="namespace" default="$(arg tf_prefix)" doc="Namespace to push all topics into."/>
  

  <group unless="$(eval namespace != '')">
    <group>
      <remap from="$(arg namespace)/joint_states"                   to="$(arg namespace)/mir/joint_states" />
      <remap from="$(arg namespace)/mobile_base_controller/cmd_vel" to="$(arg namespace)/cmd_vel" />
      <remap from="$(arg namespace)/mobile_base_controller/odom"    to="$(arg namespace)/odom" />
      
      <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)"/>
        <arg name="paused" value="false" />
        <arg name="gui" value="$(arg gui)" />
      </include>
    </group>

    <!-- mir_gazebo_common args -->
    <arg name="prefix" value="$(arg tf_prefix)/" if="$(eval tf_prefix != '')" /> <!-- $(arg prefix) is used in all the config files! TODO: For multiple robots, create groups when loading the parameters to overwrite the arg? -->
    <arg name="prefix" value=""                  unless="$(eval tf_prefix != '')" />
    <arg name="model_name" default="mir" doc="Name of the Gazebo robot model (needs to be different for each robot)" />

    <!-- Load URDF -->
    <include file="$(find mir100_gazebo)/launch/upload_mir_urdf.launch">
      <arg name="mir_type" value="$(arg mir_type)" />
      <arg name="tf_prefix" value="$(arg tf_prefix)" />
    </include>


    <!-- Spawn the robot into Gazebo -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model $(arg model_name) -x $(arg robot_x) -y $(arg robot_y) -Y $(arg robot_yaw) " />


    <!-- Load ros_control controller configurations -->
    <rosparam file="$(find mir100_gazebo)/mir_config/joint_state_controller.yaml" command="load" />
    <rosparam file="$(find mir100_gazebo)/mir_config/diffdrive_controller.yaml" command="load" subst_value="true" />


    <!-- Start the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" output="screen"
      args="joint_state_controller mobile_base_controller"/>


    <!-- EKF -->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_node" clear_params="true" output="screen">
      <rosparam command="load" file="$(find mir100_gazebo)/ekf_config/ekf.yaml" subst_value="true" />
    </node>


    <!-- Add passive + mimic joints to joint_states topic -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <rosparam param="source_list">[mir/joint_states]</rosparam>
      <param name="rate" value="200.0" />
    </node>


    <!-- Robot state publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen" />


    <!-- create combined scan topic (like on real MiR) -->
    <node pkg="topic_tools" type="relay" name="b_scan_relay" args="b_scan scan"/>
    <node pkg="topic_tools" type="relay" name="f_scan_relay" args="f_scan scan"/>
    <node name="b_rep117_laser_filter" pkg="mir100_driver" type="rep117_filter.py" output="screen">
      <remap from="scan" to="b_scan" />
      <remap from="scan_filtered" to="b_scan_rep117" />
    </node>
    <node name="f_rep117_laser_filter" pkg="mir100_driver" type="rep117_filter.py" output="screen">
      <remap from="scan" to="f_scan" />
      <remap from="scan_filtered" to="f_scan_rep117" />
    </node>

  </group>

  
  <!-- Spawn map model on gazebo -->
  <node name="spawn_maze" pkg="gazebo_ros" type="spawn_model" args="-sdf -file $(find mir100_gazebo)/map_sdf/maze/model.sdf -model walls" output="screen" />

</launch>
